{"version":3,"file":"main.js","sources":["../src/svghandler.ts","../src/main.ts"],"sourcesContent":["let lines: HTMLCollectionOf<Element>;\r\nlet activeLineIndex;\r\nlet svgTop;\r\nconst topMargin = 20;\r\nconst lineSpace = 15;\r\nconst aantalSnaren = 5;\r\nconst aantalFrets = 22;\r\nconst keyMilliseconds = 500;\r\nconst acceptedFretKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\n\r\nconst vp = document.getElementById('viewport');\r\nconst vpDiv = document.getElementById('viewportContainer');\r\n\r\nsvgTop = vpDiv.offsetTop;\r\n\r\ndocument.addEventListener('click', (event: MouseEvent) => {\r\n  activeLineIndex = Math.round((event.pageY - (svgTop + topMargin)) / lineSpace);\r\n  activateLine();\r\n});\r\n\r\nlet lastKeyPressed = Date.now();\r\nlet lastKey = '';\r\nlet keyBusy = false;\r\n\r\ndocument.addEventListener('keyup', (event: KeyboardEvent) => {\r\n\r\n  if(activeLineIndex >= 0 && activeLineIndex < aantalSnaren) {\r\n    switch(event.key) {\r\n      case 'ArrowUp':{\r\n        activeLineIndex = Math.max(0, activeLineIndex - 1);\r\n        activateLine();\r\n        return;\r\n      }\r\n      case 'ArrowDown': {\r\n        activeLineIndex = Math.min(aantalSnaren -1, activeLineIndex + 1);\r\n        activateLine();\r\n        return;\r\n      }\r\n      case acceptedFretKeys[event.key]: {\r\n        const now = Date.now();\r\n        const deadline = lastKeyPressed + keyMilliseconds;\r\n\r\n        if (now >= deadline){\r\n          keyBusy = false;\r\n          lastKey = event.key;\r\n        } else {\r\n          keyBusy = true;\r\n          lastKey += event.key;\r\n        }\r\n        lastKeyPressed = Date.now();\r\n\r\n        setTimeout(() => { \r\n          if (!keyBusy) {\r\n            MaakNoot(lastKey); \r\n          }\r\n          keyBusy = false;\r\n        }, keyMilliseconds);\r\n        \r\n        return;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }   \r\n  }\r\n\r\n});\r\n\r\nconst MaakNoot = (fretAsString: string) => {\r\n  const fret = parseInt(fretAsString);\r\n  if(fret > aantalFrets) {\r\n    return;\r\n  }\r\n  console.log(`ik maak de noot ${fret}`);\r\n}\r\n\r\nexport const maak = () => {\r\n  vp.innerHTML = `\r\n    <line class=\"bar\" x1=\"20\" y1=\"20\" x2=\"20\" y2=\"80\" />\r\n    <line class=\"line\" x1=\"20\" y1=\"20\" x2=\"780\" y2=\"20\" />\r\n    <line class=\"line\" x1=\"20\" y1=\"35\" x2=\"780\" y2=\"35\" />\r\n    <line class=\"line\" x1=\"20\" y1=\"50\" x2=\"780\" y2=\"50\" />\r\n    <line class=\"line\" x1=\"20\" y1=\"65\" x2=\"780\" y2=\"65\" />\r\n    <line class=\"line\" x1=\"20\" y1=\"80\" x2=\"780\" y2=\"80\" />\r\n    <line class=\"bar\" x1=\"780\" y1=\"20\" x2=\"780\" y2=\"80\" /> \r\n    `\r\n    ;\r\n\r\n    grabElements();\r\n    /*\r\n   +\r\n    <text x=\"20\" y=\"35\" class=\"tp\" stroke=\"red\">0</text> + \r\n    <text x=\"30\" y=\"35\" class=\"tp\">1</text> +\r\n    <text x=\"40\" y=\"35\" class=\"tp\">2</text> +\r\n    <text x=\"50\" y=\"35\" class=\"tp\">3</text> +\r\n    <text x=\"60\" y=\"35\" class=\"tp\">4</text>\r\n    */       \r\n}\r\n\r\nexport const clear = () => {\r\n  vp.innerHTML = '';\r\n}\r\n\r\nconst grabElements = () => {\r\n  lines = document.getElementsByClassName('line');\r\n}\r\n\r\nconst activateLine = () => {\r\n\r\n  if (!lines) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if(lines[i].classList.contains('activeline')){\r\n      lines[i].classList.toggle('activeline');    \r\n    }    \r\n  }\r\n\r\n  if(activeLineIndex >= 0 && activeLineIndex < aantalSnaren) {\r\n    lines[activeLineIndex].classList.toggle('activeline');\r\n  }\r\n}","import * as svghandler from './svghandler';\r\n\r\nconst svg = document.getElementById('')\r\nconst bM = document.getElementById('btnMaak');\r\n\r\nbM.addEventListener('click', (event) => {\r\n\r\n  svghandler.maak();\r\n\r\n});\r\n\r\nconst bC = document.getElementById('btnClear');\r\n\r\nbC.addEventListener('click', (event) => {\r\n\r\n  svghandler.clear();\r\n\r\n});\r\n\r\nsvghandler.maak();"],"names":["lines","activeLineIndex","svgTop","acceptedFretKeys","vp","document","getElementById","vpDiv","offsetTop","addEventListener","event","Math","round","pageY","activateLine","lastKeyPressed","Date","now","lastKey","keyBusy","key","max","min","aantalSnaren","setTimeout","MaakNoot","fretAsString","fret","parseInt","console","log","maak","innerHTML","grabElements","getElementsByClassName","i","length","classList","contains","toggle","svghandler"],"mappings":"mBAAA,IAAIA,EACAC,EACAC,EAMEC,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjEC,EAAKC,SAASC,eAAe,YAC7BC,EAAQF,SAASC,eAAe,qBAEtCJ,EAASK,EAAMC,UAEfH,SAASI,iBAAiB,SAAS,SAACC,GAClCT,EAAkBU,KAAKC,OAAOF,EAAMG,OAASX,EAb7B,KACA,IAahBY,OAGF,IAAIC,EAAiBC,KAAKC,MACtBC,EAAU,GACVC,GAAU,EAEdd,SAASI,iBAAiB,SAAS,SAACC,MAE/BT,GAAmB,GAAKA,EArBR,SAsBVS,EAAMU,SACN,iBACHnB,EAAkBU,KAAKU,IAAI,EAAGpB,EAAkB,QAChDa,QAGG,mBACHb,EAAkBU,KAAKW,IAAIC,EAAiBtB,EAAkB,QAC9Da,SAGGX,EAAiBO,EAAMU,YACdJ,KAAKC,OACAF,EAjCD,KAoCdI,GAAU,EACVD,EAAUR,EAAMU,MAEhBD,GAAU,EACVD,GAAWR,EAAMU,KAEnBL,EAAiBC,KAAKC,WAEtBO,YAAW,WACJL,GACHM,EAASP,GAEXC,GAAU,IAhDI,wBA6DxB,IAAMM,EAAW,SAACC,OACVC,EAAOC,SAASF,GACnBC,EAhEe,IAmElBE,QAAQC,uBAAuBH,IAGpBI,EAAO,WAClB3B,EAAG4B,sbAWDC,KAeEA,EAAe,WACnBjC,EAAQK,SAAS6B,uBAAuB,SAGpCpB,EAAe,cAEdd,OAIA,IAAImC,EAAI,EAAGA,EAAInC,EAAMoC,OAAQD,IAC7BnC,EAAMmC,GAAGE,UAAUC,SAAS,eAC7BtC,EAAMmC,GAAGE,UAAUE,OAAO,cAI3BtC,GAAmB,GAAKA,EAlHR,GAmHjBD,EAAMC,GAAiBoC,UAAUE,OAAO,gBCtHhClC,SAASC,eAAe,IACzBD,SAASC,eAAe,WAEhCG,iBAAiB,SAAS,SAACC,GAE5B8B,OAISnC,SAASC,eAAe,YAEhCG,iBAAiB,SAAS,SAACC,GDuF5BN,EAAG4B,UAAY"}