{"version":3,"file":"main.esm.js","sources":["../src/main.ts","../src/svghandler.ts"],"sourcesContent":["import { SvgHandler } from './svghandler';\r\n\r\nconst svghandler = new SvgHandler();\r\n\r\nconst bC = document.getElementById('btnClear');\r\n\r\nbC.addEventListener('click', (event) => {\r\n\r\n  svghandler.clear();\r\n\r\n});\r\n","export class SvgHandler {\r\n\r\n  private pristineSvg = `\r\n  <line class=\"bar\" x1=\"20\" y1=\"20\" x2=\"20\" y2=\"80\" />\r\n  <line class=\"line\" x1=\"20\" y1=\"20\" x2=\"780\" y2=\"20\" />\r\n  <line class=\"line\" x1=\"20\" y1=\"35\" x2=\"780\" y2=\"35\" />\r\n  <line class=\"line\" x1=\"20\" y1=\"50\" x2=\"780\" y2=\"50\" />\r\n  <line class=\"line\" x1=\"20\" y1=\"65\" x2=\"780\" y2=\"65\" />\r\n  <line class=\"line\" x1=\"20\" y1=\"80\" x2=\"780\" y2=\"80\" />\r\n  <line class=\"bar\" x1=\"780\" y1=\"20\" x2=\"780\" y2=\"80\" /> \r\n  `;\r\n  private vp = document.getElementById('viewport');\r\n  private vpDiv = document.getElementById('viewportContainer');\r\n  private fretbusyDiv = document.getElementsByClassName('fretbusy');\r\n  private lines: HTMLCollectionOf<Element>;\r\n  private activeLineIndex;\r\n  private svgTop;\r\n  private topMargin = 20;\r\n  private lineSpace = 15;\r\n  private aantalSnaren = 5;\r\n  private aantalFrets = 22;\r\n  private keyMilliseconds = 300;\r\n  private acceptedFretKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\r\n  private lastKeyPressed = Date.now();\r\n  private lastKey = '';\r\n  private keyBusy = false;\r\n  private _fretBusy = false;\r\n    \r\n  constructor() {\r\n\r\n    this.svgTop = this.vpDiv.offsetTop;\r\n    \r\n    document.addEventListener('click', (event: MouseEvent) => {\r\n      this.activeLineIndex = Math.round((event.pageY - (this.svgTop + this.topMargin)) / this.lineSpace);\r\n      this.activateLine();\r\n    });\r\n    \r\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\r\n      this.handleKeyUp(event);    \r\n    });\r\n\r\n    this.clear();\r\n  }\r\n\r\n      /*\r\n    +\r\n      <text x=\"20\" y=\"35\" class=\"tp\" stroke=\"red\">0</text> + \r\n      <text x=\"30\" y=\"35\" class=\"tp\">1</text> +\r\n      <text x=\"40\" y=\"35\" class=\"tp\">2</text> +\r\n      <text x=\"50\" y=\"35\" class=\"tp\">3</text> +\r\n      <text x=\"60\" y=\"35\" class=\"tp\">4</text>\r\n      */       \r\n\r\n  clear() {\r\n    this.vp.innerHTML = this.pristineSvg;\r\n    this.grabElements();;\r\n  }\r\n\r\n  private grabElements() {\r\n    this.lines = document.getElementsByClassName('line');\r\n  }\r\n\r\n  private activateLine() {\r\n\r\n    if (!this.lines) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      if(this.lines[i].classList.contains('activeline')){\r\n        this.lines[i].classList.toggle('activeline');    \r\n      }    \r\n    }\r\n\r\n    if(this.activeLineIndex >= 0 && this.activeLineIndex < this.aantalSnaren) {\r\n      this.lines[this.activeLineIndex].classList.toggle('activeline');\r\n    }\r\n  }\r\n\r\n  private handleKeyUp(event: KeyboardEvent): void {\r\n\r\n    this.fretBusy = true;\r\n\r\n    if(this.activeLineIndex >= 0 && this.activeLineIndex < this.aantalSnaren) {\r\n      switch(event.key) {\r\n        case 'ArrowUp':{\r\n          this.activeLineIndex = Math.max(0, this.activeLineIndex - 1);\r\n          this.activateLine();\r\n          return;\r\n        }\r\n        case 'ArrowDown': {\r\n          this.activeLineIndex = Math.min(this.aantalSnaren -1, this.activeLineIndex + 1);\r\n          this.activateLine();\r\n          return;\r\n        }\r\n        case this.acceptedFretKeys[event.key]: {\r\n          const now = Date.now();\r\n          const deadline = this.lastKeyPressed + this.keyMilliseconds;\r\n  \r\n          if (now >= deadline){\r\n            this.keyBusy = false;\r\n            this.lastKey = event.key;\r\n          } else {\r\n            this.keyBusy = true;\r\n            this.lastKey += event.key;\r\n          }\r\n          this.lastKeyPressed = Date.now();\r\n  \r\n          setTimeout(() => { \r\n            if (!this.keyBusy) {\r\n              this.maakNoot(this.lastKey); \r\n            }\r\n            this.fretBusy = false;\r\n            this.keyBusy = false;\r\n          }, this.keyMilliseconds);\r\n          \r\n          return;\r\n        }\r\n        default: {\r\n          return;\r\n        }\r\n      }   \r\n    }\r\n  }\r\n\r\n  get fretBusy(): boolean {\r\n    return this._fretBusy;\r\n  }\r\n\r\n  set fretBusy(value: boolean) {\r\n    this._fretBusy = value;\r\n    for (let i = 0; i < this.fretbusyDiv.length; i++){\r\n      if (this._fretBusy) {\r\n        this.fretbusyDiv[i].classList.remove('not-visible')\r\n        this.fretbusyDiv[i].classList.add('visible')\r\n      } else {\r\n        this.fretbusyDiv[i].classList.remove('visible')\r\n        this.fretbusyDiv[i].classList.add('not-visible')\r\n      }\r\n    }\r\n  }\r\n\r\n  private maakNoot(fretAsString: string) {\r\n    const fret = parseInt(fretAsString);\r\n    if(fret > this.aantalFrets) {\r\n      return;\r\n    }\r\n    console.log(`ik maak de noot ${fret}`);\r\n  }\r\n\r\n}\r\n"],"names":["svghandler","constructor","pristineSvg","vp","document","getElementById","vpDiv","fretbusyDiv","getElementsByClassName","topMargin","lineSpace","aantalSnaren","aantalFrets","keyMilliseconds","acceptedFretKeys","lastKeyPressed","Date","now","lastKey","keyBusy","_fretBusy","svgTop","this","offsetTop","addEventListener","event","activeLineIndex","Math","round","pageY","activateLine","handleKeyUp","clear","innerHTML","grabElements","lines","i","length","classList","contains","toggle","fretBusy","key","max","min","setTimeout","maakNoot","value","remove","add","fretAsString","fret","parseInt","console","log"],"mappings":"AAEA,IAAMA,EAAa,ICFZ,MA4BLC,mBA1BQC,YAAe,iaASfC,GAAKC,SAASC,eAAe,iBAC7BC,MAAQF,SAASC,eAAe,0BAChCE,YAAcH,SAASI,uBAAuB,iBAI9CC,UAAY,QACZC,UAAY,QACZC,aAAe,OACfC,YAAc,QACdC,gBAAkB,SAClBC,iBAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UACjEC,eAAiBC,KAAKC,WACtBC,QAAU,QACVC,SAAU,OACVC,GAAY,OAIbC,OAASC,KAAKhB,MAAMiB,UAEzBnB,SAASoB,iBAAiB,SAAUC,SAC7BC,gBAAkBC,KAAKC,OAAOH,EAAMI,OAASP,KAAKD,OAASC,KAAKb,YAAca,KAAKZ,gBACnFoB,kBAGP1B,SAASoB,iBAAiB,SAAUC,SAC7BM,YAAYN,WAGdO,QAYPA,aACO7B,GAAG8B,UAAYX,KAAKpB,iBACpBgC,eAGCA,oBACDC,MAAQ/B,SAASI,uBAAuB,QAGvCsB,kBAEDR,KAAKa,WAIL,IAAIC,EAAI,EAAGA,EAAId,KAAKa,MAAME,OAAQD,IAClCd,KAAKa,MAAMC,GAAGE,UAAUC,SAAS,oBAC7BJ,MAAMC,GAAGE,UAAUE,OAAO,cAIhClB,KAAKI,iBAAmB,GAAKJ,KAAKI,gBAAkBJ,KAAKX,mBACrDwB,MAAMb,KAAKI,iBAAiBY,UAAUE,OAAO,eAI9CT,YAAYN,WAEbgB,UAAW,EAEbnB,KAAKI,iBAAmB,GAAKJ,KAAKI,gBAAkBJ,KAAKX,oBACnDc,EAAMiB,SACN,sBACEhB,gBAAkBC,KAAKgB,IAAI,EAAGrB,KAAKI,gBAAkB,aACrDI,mBAGF,wBACEJ,gBAAkBC,KAAKiB,IAAItB,KAAKX,aAAc,EAAGW,KAAKI,gBAAkB,aACxEI,oBAGFR,KAAKR,iBAAiBW,EAAMiB,YACnB1B,KAAKC,OACAK,KAAKP,eAAiBO,KAAKT,sBAGrCM,SAAU,OACVD,QAAUO,EAAMiB,WAEhBvB,SAAU,OACVD,SAAWO,EAAMiB,UAEnB3B,eAAiBC,KAAKC,WAE3B4B,YAAW,KACJvB,KAAKH,cACH2B,SAASxB,KAAKJ,cAEhBuB,UAAW,OACXtB,SAAU,IACdG,KAAKT,uDAYPS,KAAKF,eAGD2B,QACN3B,EAAY2B,MACZ,IAAIX,EAAI,EAAGA,EAAId,KAAKf,YAAY8B,OAAQD,IACvCd,KAAKF,QACFb,YAAY6B,GAAGE,UAAUU,OAAO,oBAChCzC,YAAY6B,GAAGE,UAAUW,IAAI,kBAE7B1C,YAAY6B,GAAGE,UAAUU,OAAO,gBAChCzC,YAAY6B,GAAGE,UAAUW,IAAI,gBAKhCH,SAASI,OACTC,EAAOC,SAASF,GACnBC,EAAO7B,KAAKV,aAGfyC,QAAQC,IAAK,mBAAkBH,OD/IxB/C,SAASC,eAAe,YAEhCmB,iBAAiB,SAAUC,IAE5BzB,EAAWgC"}